{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "10086023154618343477"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the disk that is being created."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Resource location."
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "Required. The disks sku name. Can be ."
      },
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS",
        "Premium_ZRS",
        "Premium_ZRS",
        "PremiumV2_LRS"
      ]
    },
    "architecture": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. CPU architecture supported by an OS disk."
      },
      "allowedValues": [
        "x64",
        "Arm64",
        ""
      ]
    },
    "burstingEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Set to true to enable bursting beyond the provisioned performance target of the disk."
      }
    },
    "completionPercent": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Optional. Percentage complete for the background copy when a resource is created via the CopyStart operation."
      }
    },
    "createOption": {
      "type": "string",
      "defaultValue": "Empty",
      "metadata": {
        "description": "Optional. Sources of a disk creation."
      },
      "allowedValues": [
        "Attach",
        "Copy",
        "CopyStart",
        "Empty",
        "FromImage",
        "Import",
        "ImportSecure",
        "Restore",
        "Upload",
        "UploadPreparedSecure"
      ]
    },
    "imageReferenceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. A relative uri containing either a Platform Image Repository or user image reference."
      }
    },
    "logicalSectorSize": {
      "type": "int",
      "defaultValue": 4096,
      "metadata": {
        "description": "Optional. Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096."
      }
    },
    "securityDataUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is ImportSecure, this is the URI of a blob to be imported into VM guest state."
      }
    },
    "sourceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is Copy, this is the ARM ID of the source snapshot or disk."
      }
    },
    "sourceUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is Import, this is the URI of a blob to be imported into a managed disk."
      }
    },
    "storageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource ID of the storage account containing the blob to import as a disk. Required if create option is Import."
      }
    },
    "uploadSizeBytes": {
      "type": "int",
      "defaultValue": 20972032,
      "metadata": {
        "description": "Optional. If create option is Upload, this is the size of the contents of the upload including the VHD footer."
      }
    },
    "diskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Conditional. The size of the disk to create. Required if create option is Empty."
      }
    },
    "diskIOPSReadWrite": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The number of IOPS allowed for this disk; only settable for UltraSSD disks."
      }
    },
    "diskMBpsReadWrite": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The bandwidth allowed for this disk; only settable for UltraSSD disks."
      }
    },
    "hyperVGeneration": {
      "type": "string",
      "defaultValue": "V2",
      "metadata": {
        "description": "Optional. The hypervisor generation of the Virtual Machine. Applicable to OS disks only."
      },
      "allowedValues": [
        "V1",
        "V2"
      ]
    },
    "maxShares": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Optional. The maximum number of VMs that can attach to the disk at the same time. Default value is 0."
      }
    },
    "networkAccessPolicy": {
      "type": "string",
      "defaultValue": "DenyAll",
      "metadata": {
        "description": "Optional. Policy for accessing the disk via network."
      },
      "allowedValues": [
        "AllowAll",
        "AllowPrivate",
        "DenyAll"
      ]
    },
    "optimizedForFrequentAttach": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine."
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Sources of a disk creation."
      },
      "allowedValues": [
        "Windows",
        "Linux",
        ""
      ]
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Optional. Policy for controlling export on the disk."
      },
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "acceleratedNetwork": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. True if the image from which the OS disk is created supports accelerated networking."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "",
        "CanNotDelete",
        "ReadOnly"
      ]
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the availability set resource."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2022-07-02",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "burstingEnabled": "[parameters('burstingEnabled')]",
        "completionPercent": "[parameters('completionPercent')]",
        "creationData": {
          "createOption": "[parameters('createOption')]",
          "imageReference": "[if(not(equals(parameters('createOption'), 'FromImage')), null(), createObject('id', parameters('imageReferenceId')))]",
          "logicalSectorSize": "[if(contains(parameters('sku'), 'Ultra'), parameters('logicalSectorSize'), null())]",
          "securityDataUri": "[if(equals(parameters('createOption'), 'ImportSecure'), parameters('securityDataUri'), null())]",
          "sourceResourceId": "[if(equals(parameters('createOption'), 'Copy'), parameters('sourceResourceId'), null())]",
          "sourceUri": "[if(equals(parameters('createOption'), 'Import'), parameters('sourceUri'), null())]",
          "storageAccountId": "[if(equals(parameters('createOption'), 'Import'), parameters('storageAccountId'), null())]",
          "uploadSizeBytes": "[if(equals(parameters('createOption'), 'Upload'), parameters('uploadSizeBytes'), null())]"
        },
        "diskIOPSReadWrite": "[if(contains(parameters('sku'), 'Ultra'), parameters('diskIOPSReadWrite'), null())]",
        "diskMBpsReadWrite": "[if(contains(parameters('sku'), 'Ultra'), parameters('diskMBpsReadWrite'), null())]",
        "diskSizeGB": "[if(equals(parameters('createOption'), 'Empty'), parameters('diskSizeGB'), null())]",
        "hyperVGeneration": "[if(empty(parameters('osType')), null(), parameters('hyperVGeneration'))]",
        "maxShares": "[parameters('maxShares')]",
        "networkAccessPolicy": "[parameters('networkAccessPolicy')]",
        "optimizedForFrequentAttach": "[parameters('optimizedForFrequentAttach')]",
        "osType": "[if(empty(parameters('osType')), null(), parameters('osType'))]",
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
        "supportedCapabilities": "[if(empty(parameters('osType')), createObject(), createObject('acceleratedNetwork', parameters('acceleratedNetwork'), 'architecture', if(empty(parameters('architecture')), null(), parameters('architecture'))))]"
      }
    },
    {
      "condition": "[not(empty(parameters('lock')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Compute/disks/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "disk_roleAssignments",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-AvSet-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "description": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), createObject('value', parameters('roleAssignments')[copyIndex()].description), createObject('value', ''))]",
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "principalType": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), createObject('value', parameters('roleAssignments')[copyIndex()].principalType), createObject('value', ''))]",
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "condition": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), createObject('value', parameters('roleAssignments')[copyIndex()].condition), createObject('value', ''))]",
          "delegatedManagedIdentityResourceId": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), createObject('value', parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId), createObject('value', ''))]",
          "resourceId": {
            "value": "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "12749624585003590955"
            }
          },
          "parameters": {
            "principalIds": {
              "type": "array",
              "metadata": {
                "description": "Required. The IDs of the principals to assign the role to."
              }
            },
            "roleDefinitionIdOrName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
              }
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the resource to apply the role assignment to."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the role assignment."
              }
            },
            "condition": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
              }
            },
            "conditionVersion": {
              "type": "string",
              "defaultValue": "2.0",
              "allowedValues": [
                "2.0"
              ],
              "metadata": {
                "description": "Optional. Version of the condition."
              }
            },
            "delegatedManagedIdentityResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Id of the delegated managed identity resource."
              }
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
              "Avere Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c025889f-8102-4ebf-b32c-fc0c6f0c6bd9')]",
              "Azure Center for SAP solutions administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7')]",
              "Azure Center for SAP solutions reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '05352d14-a920-4328-a0de-4cbe7430e26b')]",
              "Azure Center for SAP solutions service role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'aabbc5dd-1af0-458b-a942-81af88f9c138')]",
              "Azure Kubernetes Service Policy Add-on Deployment": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18ed5180-3e48-46fd-8541-4ea054d57064')]",
              "Compute Gallery Sharing Admin": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1ef6a3be-d0ac-425d-8c01-acb62866290b')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Data Operator for Managed Disks": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '959f8984-c045-4866-89c7-12bf9737be2e')]",
              "Desktop Virtualization Power On Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '489581de-a3bd-480d-9518-53dea7416b33')]",
              "Desktop Virtualization Power On Off Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '40c5ff49-9181-41f8-ae61-143b0e78555e')]",
              "Desktop Virtualization Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a959dbd1-f747-45e3-8ba6-dd80f235f97c')]",
              "DevTest Labs User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '76283e04-6283-4c54-8f91-bcf1374a3c64')]",
              "Disk Backup Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e5e47e6-65f7-47ef-90b5-e5dd4d455f24')]",
              "Disk Pool Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '60fc6e62-5479-42d4-8bf4-67625fcc2840')]",
              "Disk Restore Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b50d9833-a0cb-478e-945f-707fcc997c13')]",
              "Disk Snapshot Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7efff54f-a5b4-42b5-a1c5-5411624893ce')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Reservation Purchaser": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f7b75c60-3036-4b75-91c3-6b41c27c1689')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
              "Virtual Machine Administrator Login": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1c0163c0-47e6-4577-8991-ea5c82e286e4')]",
              "Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
              "Virtual Machine User Login": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fb879df8-f326-4884-b1cf-06f3ad86be52')]",
              "VM Scanner Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd24ecba3-c1f4-40fa-a7bb-4588a071e8fd')]",
              "Windows Admin Center Administrator Login": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a6333a3e-0164-44c3-b281-7a577aff287f')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Compute/disks/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(resourceId('Microsoft.Compute/disks', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "description": "[parameters('description')]",
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]",
                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the  disk was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the disk."
      },
      "value": "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the disk."
      },
      "value": "[parameters('name')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference(resourceId('Microsoft.Compute/disks', parameters('name')), '2022-07-02', 'full').location]"
    }
  }
}