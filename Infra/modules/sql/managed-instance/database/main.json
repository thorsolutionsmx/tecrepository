{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "2497751269793012554"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the SQL managed instance database."
      }
    },
    "managedInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent SQL managed instance. Required if the template is used in a standalone deployment."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "Optional. Collation of the managed instance database."
      }
    },
    "catalogCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "Optional. Collation of the managed instance."
      }
    },
    "createMode": {
      "type": "string",
      "defaultValue": "Default",
      "allowedValues": [
        "Default",
        "RestoreExternalBackup",
        "PointInTimeRestore",
        "Recovery",
        "RestoreLongTermRetentionBackup"
      ],
      "metadata": {
        "description": "Optional. Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required)."
      }
    },
    "sourceDatabaseId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource identifier of the source database associated with create operation of this database. Required if createMode is PointInTimeRestore."
      }
    },
    "restorePointInTime": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Required if createMode is PointInTimeRestore."
      }
    },
    "restorableDroppedDatabaseId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The restorable dropped database resource ID to restore when creating this database."
      }
    },
    "storageContainerUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. Specifies the uri of the storage container where backups for this restore are stored. Required if createMode is RestoreExternalBackup."
      }
    },
    "storageContainerSasToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. Specifies the storage container sas token. Required if createMode is RestoreExternalBackup."
      }
    },
    "recoverableDatabaseId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource identifier of the recoverable database associated with create operation of this database. Required if createMode is Recovery."
      }
    },
    "longTermRetentionBackupResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource ID of the Long Term Retention backup to be used for restore of this managed database. Required if createMode is RestoreLongTermRetentionBackup."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "maxValue": 365,
      "minValue": 0,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic storage account."
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic log analytics workspace."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "",
        "CanNotDelete",
        "ReadOnly"
      ]
    },
    "backupShortTermRetentionPoliciesObj": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The configuration for the backup short term retention policy definition."
      }
    },
    "backupLongTermRetentionPoliciesObj": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The configuration for the backup long term retention policy definition."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "diagnosticLogCategoriesToEnable": {
      "type": "array",
      "defaultValue": [
        "allLogs"
      ],
      "allowedValues": [
        "",
        "allLogs",
        "SQLInsights",
        "QueryStoreRuntimeStatistics",
        "QueryStoreWaitStatistics",
        "Errors"
      ],
      "metadata": {
        "description": "Optional. The name of logs that will be streamed. \"allLogs\" includes all possible logs for the resource. Set to '' to disable log collection."
      }
    },
    "diagnosticSettingsName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The name of the diagnostic setting, if deployed. If left empty, it defaults to \"<resourceName>-diagnosticSettings\"."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsLogsSpecified",
        "count": "[length(filter(parameters('diagnosticLogCategoriesToEnable'), lambda('item', and(not(equals(lambdaVariables('item'), 'allLogs')), not(equals(lambdaVariables('item'), ''))))))]",
        "input": {
          "category": "[filter(parameters('diagnosticLogCategoriesToEnable'), lambda('item', and(not(equals(lambdaVariables('item'), 'allLogs')), not(equals(lambdaVariables('item'), '')))))[copyIndex('diagnosticsLogsSpecified')]]",
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      }
    ],
    "diagnosticsLogs": "[if(contains(parameters('diagnosticLogCategoriesToEnable'), 'allLogs'), createArray(createObject('categoryGroup', 'allLogs', 'enabled', true(), 'retentionPolicy', createObject('enabled', true(), 'days', parameters('diagnosticLogsRetentionInDays')))), if(contains(parameters('diagnosticLogCategoriesToEnable'), ''), createArray(), variables('diagnosticsLogsSpecified')))]",
    "enableReferencedModulesTelemetry": false
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Sql/managedInstances/databases",
      "apiVersion": "2022-02-01-preview",
      "name": "[format('{0}/{1}', parameters('managedInstanceName'), parameters('name'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "collation": "[if(empty(parameters('collation')), null(), parameters('collation'))]",
        "restorePointInTime": "[if(empty(parameters('restorePointInTime')), null(), parameters('restorePointInTime'))]",
        "catalogCollation": "[if(empty(parameters('catalogCollation')), null(), parameters('catalogCollation'))]",
        "createMode": "[if(empty(parameters('createMode')), null(), parameters('createMode'))]",
        "storageContainerUri": "[if(empty(parameters('storageContainerUri')), null(), parameters('storageContainerUri'))]",
        "sourceDatabaseId": "[if(empty(parameters('sourceDatabaseId')), null(), parameters('sourceDatabaseId'))]",
        "restorableDroppedDatabaseId": "[if(empty(parameters('restorableDroppedDatabaseId')), null(), parameters('restorableDroppedDatabaseId'))]",
        "storageContainerSasToken": "[if(empty(parameters('storageContainerSasToken')), null(), parameters('storageContainerSasToken'))]",
        "recoverableDatabaseId": "[if(empty(parameters('recoverableDatabaseId')), null(), parameters('recoverableDatabaseId'))]",
        "longTermRetentionBackupResourceId": "[if(empty(parameters('longTermRetentionBackupResourceId')), null(), parameters('longTermRetentionBackupResourceId'))]"
      }
    },
    {
      "condition": "[not(empty(parameters('lock')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.Sql/managedInstances/{0}/databases/{1}', parameters('managedInstanceName'), parameters('name'))]",
      "name": "[format('{0}-{1}-lock', last(split(parameters('name'), '/')), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name'))]"
      ]
    },
    {
      "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Sql/managedInstances/{0}/databases/{1}', parameters('managedInstanceName'), parameters('name'))]",
      "name": "[if(not(empty(parameters('diagnosticSettingsName'))), parameters('diagnosticSettingsName'), format('{0}-diagnosticSettings', parameters('name')))]",
      "properties": {
        "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
        "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
        "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
        "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
        "logs": "[variables('diagnosticsLogs')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('backupShortTermRetentionPoliciesObj')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-BackupShortTRetPol', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "managedInstanceName": {
            "value": "[parameters('managedInstanceName')]"
          },
          "databaseName": {
            "value": "[last(split(parameters('name'), '/'))]"
          },
          "name": {
            "value": "[parameters('backupShortTermRetentionPoliciesObj').name]"
          },
          "retentionDays": "[if(contains(parameters('backupShortTermRetentionPoliciesObj'), 'retentionDays'), createObject('value', parameters('backupShortTermRetentionPoliciesObj').retentionDays), createObject('value', 35))]",
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "339225421683905916"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Short Term Retention backup policy. For example \"default\"."
              }
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent SQL managed instance database. Required if the template is used in a standalone deployment."
              }
            },
            "managedInstanceName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent SQL managed instance. Required if the template is used in a standalone deployment."
              }
            },
            "retentionDays": {
              "type": "int",
              "defaultValue": 35,
              "metadata": {
                "description": "Optional. The backup retention period in days. This is how many days Point-in-Time Restore will be supported."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies",
              "apiVersion": "2022-02-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('managedInstanceName'), parameters('databaseName'), parameters('name'))]",
              "properties": {
                "retentionDays": "[parameters('retentionDays')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the deployed database backup short-term retention policy."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed database backup short-term retention policy."
              },
              "value": "[resourceId('Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies', parameters('managedInstanceName'), parameters('databaseName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group of the deployed database backup short-term retention policy."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('backupLongTermRetentionPoliciesObj')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-BackupLongTRetPol', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "managedInstanceName": {
            "value": "[parameters('managedInstanceName')]"
          },
          "databaseName": {
            "value": "[last(split(parameters('name'), '/'))]"
          },
          "name": {
            "value": "[parameters('backupLongTermRetentionPoliciesObj').name]"
          },
          "weekOfYear": "[if(contains(parameters('backupLongTermRetentionPoliciesObj'), 'weekOfYear'), createObject('value', parameters('backupLongTermRetentionPoliciesObj').weekOfYear), createObject('value', 5))]",
          "weeklyRetention": "[if(contains(parameters('backupLongTermRetentionPoliciesObj'), 'weeklyRetention'), createObject('value', parameters('backupLongTermRetentionPoliciesObj').weeklyRetention), createObject('value', 'P1M'))]",
          "monthlyRetention": "[if(contains(parameters('backupLongTermRetentionPoliciesObj'), 'monthlyRetention'), createObject('value', parameters('backupLongTermRetentionPoliciesObj').monthlyRetention), createObject('value', 'P1Y'))]",
          "yearlyRetention": "[if(contains(parameters('backupLongTermRetentionPoliciesObj'), 'yearlyRetention'), createObject('value', parameters('backupLongTermRetentionPoliciesObj').yearlyRetention), createObject('value', 'P5Y'))]",
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "1033992501650214243"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Long Term Retention backup policy. For example \"default\"."
              }
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent managed instance database. Required if the template is used in a standalone deployment."
              }
            },
            "managedInstanceName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent managed instance. Required if the template is used in a standalone deployment."
              }
            },
            "weekOfYear": {
              "type": "int",
              "defaultValue": 5,
              "metadata": {
                "description": "Optional. The week of year to take the yearly backup in an ISO 8601 format."
              }
            },
            "weeklyRetention": {
              "type": "string",
              "defaultValue": "P1M",
              "metadata": {
                "description": "Optional. The weekly retention policy for an LTR backup in an ISO 8601 format."
              }
            },
            "monthlyRetention": {
              "type": "string",
              "defaultValue": "P1Y",
              "metadata": {
                "description": "Optional. The monthly retention policy for an LTR backup in an ISO 8601 format."
              }
            },
            "yearlyRetention": {
              "type": "string",
              "defaultValue": "P5Y",
              "metadata": {
                "description": "Optional. The yearly retention policy for an LTR backup in an ISO 8601 format."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies",
              "apiVersion": "2022-02-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('managedInstanceName'), parameters('databaseName'), parameters('name'))]",
              "properties": {
                "monthlyRetention": "[parameters('monthlyRetention')]",
                "weeklyRetention": "[parameters('weeklyRetention')]",
                "weekOfYear": "[parameters('weekOfYear')]",
                "yearlyRetention": "[parameters('yearlyRetention')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the deployed database backup long-term retention policy."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed database backup long-term retention policy."
              },
              "value": "[resourceId('Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies', parameters('managedInstanceName'), parameters('databaseName'), parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The resource group of the deployed database backup long-term retention policy."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed database."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed database."
      },
      "value": "[resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the database was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference(resourceId('Microsoft.Sql/managedInstances/databases', parameters('managedInstanceName'), parameters('name')), '2022-02-01-preview', 'full').location]"
    }
  }
}